# This file was generated by the Dx Native Interface (DxNI) tool.
# These are interfaces to apps.
#

task Sibelia_dgerasimov {
    File genomes 
    command {
    }
    output {
        String perm = ""
    }
    meta {
        type: "native" 
        id: "app-B9QVbj802qvY7bxJP8z008Xp" 
    }
}
task app_10x_cellranger_aggr {
    Array[File]+ molecule_files 
    String output_prefix 
    String? description 
    File? aggr_csv 
    String norm_mode 
    Boolean nosecondary 
    command {
    }
    output {
        File filtered_barcode_matrices_tar = ""
        File raw_barcode_matrices_h5 = ""
        File filtered_barcode_matrices_h5 = ""
        File? secondary_analysis = ""
        File? loupe_file = ""
        File web_summary = ""
        File raw_molecule_info = ""
        File raw_barcode_matrices_tar = ""
        File metrics_summary = ""
        File filtered_molecule_info = ""
        File cell_barcodes_csv = ""
        File pipenstance_mri = ""
    }
    meta {
        type: "native" 
        id: "app-FB6qzKQ9G1KKBV0zJ2P2zqjx" 
    }
}
task app_10x_cellranger_count {
    Array[File]+ fastq_tars 
    String? indices 
    Int? force_cells 
    String output_prefix 
    Int? r2_length 
    Int? r1_length 
    File ref 
    Int? expect_cells 
    String? lanes 
    String? chemistry 
    String? sample 
    command {
    }
    output {
        File filtered_barcode_matrices_tar = ""
        File raw_barcode_matrices_h5 = ""
        File output_bai = ""
        File output_bam = ""
        File filtered_barcode_matrices_h5 = ""
        File? secondary_analysis = ""
        File molecule_info = ""
        File? loupe_file = ""
        File web_summary = ""
        File raw_barcode_matrices_tar = ""
        File metrics_summary = ""
        File pipenstance_mri = ""
    }
    meta {
        type: "native" 
        id: "app-FB6qzjQ9kJBq0bFy5jfQ4yB9" 
    }
}
task app_10x_cellranger_mkfastq {
    String? added_cmd 
    File bcl_folder_tar_gz 
    Boolean delete_undetermined 
    String? lanes 
    String samplesheet_mode 
    File samplesheet_f 
    String? use_bases_mask 
    command {
    }
    output {
        Array[File] undetermined_fastq_files = []
        Array[File]+ stats_reports = [""]
        File qc_report = ""
        File html_report = ""
        File interop = ""
        Array[File]+ fastq_files = [""]
    }
    meta {
        type: "native" 
        id: "app-FFbjPB89BfJjvBFX6y4bfF75" 
    }
}
task app_10x_cellranger_reanalyze {
    Int? param_num_pca_bcs 
    Int? param_neighbor_b 
    Int? param_num_analysis_bcs 
    Int? force_cells 
    String output_prefix 
    File? genes_csv 
    Int? param_tsne_mom_switch_iter 
    Int? param_tsne_perplexity 
    Int? param_max_clusters 
    Float? param_tsne_theta 
    File? barcodes_csv 
    File gene_counts 
    Int? param_graphclust_neighbors 
    Int? param_tsne_max_iter 
    File? exclude_genes_csv 
    Int? param_tsne_max_dims 
    File? aggr_csv 
    Int? param_random_seed 
    Int? param_num_pca_genes 
    Int? param_num_principal_comps 
    Int? param_tsne_input_pcs 
    Int? param_neighbor_a 
    Int? param_tsne_stop_lying_iter 
    command {
    }
    output {
        File web_summary = ""
        File? secondary_analysis = ""
        File? loupe_file = ""
        File pipenstance_mri = ""
    }
    meta {
        type: "native" 
        id: "app-FB6v3Xj9Fx68q7ZV1VJk1ZBj" 
    }
}
task app_10x_cellranger_vdj {
    Array[File]+ fastq_tars 
    String? indices 
    Int? force_cells 
    String output_prefix 
    File? ref 
    String? lanes 
    String? sample 
    Boolean denovo 
    String chain 
    command {
    }
    output {
        File filtered_contig_fastq = ""
        Array[File] clonotype_consensus_alignments = []
        Array[File]+ all_contig_annotations = [""]
        Array[File]+ all_contig_seqs = [""]
        Array[File] concat_ref_alignment = []
        Array[File] clonotype_consensus = []
        File? loupe_file = ""
        File web_summary = ""
        Array[File] concat_ref = []
        File? clonotypes_csv = ""
        File filtered_contig_annotations = ""
        File metrics_summary = ""
        File filtered_contig_fasta = ""
        Array[File] clonotype_consensus_annotations = []
        File pipenstance_mri = ""
        Array[File]+ all_contig_alignments = [""]
    }
    meta {
        type: "native" 
        id: "app-FB6v5Kj9k0FP71F8KVYZ1J07" 
    }
}
task app_10x_loupe_server {
    Array[File]+ loupe_files 
    String? timeout 
    command {
    }
    meta {
        type: "native" 
        id: "app-F5Q628Q0ZxXQ0j9y0pbqBkZk" 
    }
}
task app_bionano_alignmol_single_bnx {
    File bnx_link 
    File cmap_link 
    File? autonoise_targz 
    Boolean is_vref 
    File env_pickle 
    String output_root 
    command {
    }
    output {
        File alignmol_targz_link = ""
    }
    meta {
        type: "native" 
        id: "app-F7Y6xZ89xV6xx8gX4XkJ3VXq" 
    }
}
task app_bionano_merge_alignmol {
    File? reference_cmap_link 
    Boolean is_vref 
    Array[File]+ alignmol_targz_links 
    File sorted_bnx_link 
    File env_pickle 
    command {
    }
    output {
        Array[File]+ alignmol_informatics_reports = [""]
        File merged_err = ""
        File merged_map = ""
        File merged_alignmol_tar_gz = ""
    }
    meta {
        type: "native" 
        id: "app-F669z9Q9JF5bkJQZPkQP3pJK" 
    }
}
task app_dragen_gp_germline_bam_wes {
    File input_bam 
    File hash_table 
    File? targets_bed 
    Boolean hair_pin_filter 
    command {
    }
    output {
        Array[File]+ stats = [""]
        File output_hard_filtered_vcf = ""
        File output_vcf = ""
        File output_tbi = ""
        File output_hard_filtered_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBf5G8j0QBvp8q69189B698K" 
    }
}
task app_dragen_gp_germline_bam_wgs {
    File input_bam 
    File hash_table 
    File? targets_bed 
    Boolean hair_pin_filter 
    command {
    }
    output {
        Array[File]+ stats = [""]
        File output_hard_filtered_vcf = ""
        File output_vcf = ""
        File output_tbi = ""
        File output_hard_filtered_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBf5GK004X48YFBfJyQ42YV7" 
    }
}
task app_dragen_gp_germline_bam_wgs2 {
    File input_bam 
    File hash_table 
    File? targets_bed 
    Boolean hair_pin_filter 
    command {
    }
    output {
        Array[File]+ stats = [""]
        File output_hard_filtered_vcf = ""
        File output_vcf = ""
        File output_tbi = ""
        File output_hard_filtered_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBf5GXQ0VZ7p8q69189B698f" 
    }
}
task app_dragen_gp_germline_fq_wes {
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File? rg_info_csv 
    Boolean generate_md_tag 
    String mark_or_remove_duplicates 
    Array[File]+ reads_fastqgzs 
    File? targets_bed 
    String? sample 
    File hash_table 
    Boolean hair_pin_filter 
    command {
    }
    output {
        Array[File]+ stats = [""]
        File output_hard_filtered_vcf = ""
        File output_bai = ""
        File output_bam = ""
        File output_vcf = ""
        File output_tbi = ""
        File output_hard_filtered_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBf5Gp801bG9PkQ518Q5BfXv" 
    }
}
task app_dragen_gp_germline_fq_wgs {
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File? rg_info_csv 
    Boolean generate_md_tag 
    String mark_or_remove_duplicates 
    Array[File]+ reads_fastqgzs 
    File? targets_bed 
    String? sample 
    File hash_table 
    Boolean hair_pin_filter 
    command {
    }
    output {
        Array[File]+ stats = [""]
        File output_hard_filtered_vcf = ""
        File output_bai = ""
        File output_bam = ""
        File output_vcf = ""
        File output_tbi = ""
        File output_hard_filtered_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBf5Gz004GfYbZJ1JyykB6Yz" 
    }
}
task app_dragen_gp_germline_fq_wgs2 {
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File? rg_info_csv 
    Boolean generate_md_tag 
    String mark_or_remove_duplicates 
    Array[File]+ reads_fastqgzs 
    File? targets_bed 
    String? sample 
    File hash_table 
    Boolean hair_pin_filter 
    command {
    }
    output {
        Array[File]+ stats = [""]
        File output_hard_filtered_vcf = ""
        File output_bai = ""
        File output_bam = ""
        File output_vcf = ""
        File output_tbi = ""
        File output_hard_filtered_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBf5J3Q0G7QK3jFV7PXPg6vz" 
    }
}
task app_dragen_mapping_wes {
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File? rg_info_csv 
    Boolean generate_md_tag 
    String mark_or_remove_duplicates 
    Array[File]+ reads_fastqgzs 
    String? sample 
    File hash_table 
    command {
    }
    output {
        File output_bam = ""
        File output_bai = ""
        Array[File]+ stats = [""]
    }
    meta {
        type: "native" 
        id: "app-FBf5JB00k62jXBKj32f1GPk6" 
    }
}
task app_dragen_mapping_wgs {
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File? rg_info_csv 
    Boolean generate_md_tag 
    String mark_or_remove_duplicates 
    Array[File]+ reads_fastqgzs 
    String? sample 
    File hash_table 
    command {
    }
    output {
        File output_bam = ""
        File output_bai = ""
        Array[File]+ stats = [""]
    }
    meta {
        type: "native" 
        id: "app-FBf5JK00Q8zKX8pB33BV4z0J" 
    }
}
task app_dragen_mapping_wgs2 {
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File? rg_info_csv 
    Boolean generate_md_tag 
    String mark_or_remove_duplicates 
    Array[File]+ reads_fastqgzs 
    String? sample 
    File hash_table 
    command {
    }
    output {
        File output_bam = ""
        File output_bai = ""
        Array[File]+ stats = [""]
    }
    meta {
        type: "native" 
        id: "app-FBf5JX00j39jXBKj32f1GPkK" 
    }
}
task app_falcon_gen_config {
    Array[File]+ input_reads 
    Int genome_length 
    Int seed_length_cutoff 
    Boolean aggressive 
    Int seed_coverage 
    command {
    }
    output {
        File config_json = ""
    }
    meta {
        type: "native" 
        id: "app-F8KBk600kpxbJYjqB23XK9k1" 
    }
}
task app_hgap4_create_dazzler_db {
    Array[File]+ input_reads 
    String mode 
    File gen_config 
    command {
    }
    output {
        File dazzler_db = ""
        Int num_blocks = 0
        Int length_cutoff = 0
    }
    meta {
        type: "native" 
        id: "app-F8KBpZj0xF9y6vb5F1KqP1Xz" 
    }
}
task app_hgap4_daligner {
    File db 
    String daligner_cmd 
    Int num_threads_per_job 
    command {
    }
    output {
        Array[File]+ las = [""]
    }
    meta {
        type: "native" 
        id: "app-F8KBqxQ0bfKxzX3K3fVXjFy6" 
    }
}
task app_hgap4_falcon_asm {
    File input_db 
    Array[File]+ las_files 
    File gen_config 
    command {
    }
    output {
        File primary_contig_fasta = ""
        File? sg_edges_list = ""
        File? utg_data = ""
        File? ctg_paths = ""
        File? alternate_contig_fasta = ""
        File? p_ctg_tiling_path = ""
        File? alternate_contig_base_fasta = ""
    }
    meta {
        type: "native" 
        id: "app-F8KByQ009YK5x4ZFF0gb81F0" 
    }
}
task app_hgap4_fc_hpc_daligner {
    Int? length_cutoff 
    Int num_threads_per_daligner_job 
    String? daligner_instance_type 
    Int? sync_time 
    File dazzler_db 
    String mode 
    Int num_blocks 
    String? lasort_instance_type 
    File gen_config 
    command {
    }
    output {
        Array[File] output_files = []
        Array[File] consensus_fastas = []
        File? daligner_plan_script = ""
    }
    meta {
        type: "native" 
        id: "app-F8KByz80q8V544JG3bp57x4P" 
    }
}
task app_jcdx_jupyter_gpu_server {
    command {
    }
    meta {
        type: "native" 
        id: "app-FFZFb380Pk24bQF5P7Pp02K8" 
    }
}
task app_notebook_server {
    String notebook_type 
    Boolean install_spark 
    Array[File] input_files 
    Boolean install_data_science_packages 
    File? snapshot 
    String? timeout 
    command {
    }
    output {
        Array[File]+ output_notebooks = [""]
    }
    meta {
        type: "native" 
        id: "app-F8P4ZyQ0qK3fBJFgF00J1vZ4" 
    }
}
task app_polish {
    File input_fasta 
    Array[File]+ input_bams 
    Int? num_splits 
    Int min_confidence 
    Boolean masking 
    Int min_coverage 
    Array[File] splits 
    String polishing_algorithm 
    command {
    }
    output {
        File polished_gff = ""
        File polished_fastq = ""
        File polished_fasta = ""
        File polished_bed = ""
        File polished_vcf = ""
    }
    meta {
        type: "native" 
        id: "app-F8KBgz00gKK0j4jGB32j4jKY" 
    }
}
task app_preassembly_yield_report {
    Array[File]+ consensus_fastas 
    File raw_reads_db 
    Int length_cutoff 
    File gen_config 
    command {
    }
    output {
        File preassembly_report = ""
    }
    meta {
        type: "native" 
        id: "app-F8KF07Q066g98G6fPV2ggX1g" 
    }
}
task app_sentieon_dnaseq_bam_panel {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    Int? bam_compression_level 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Boolean run_deduplicate 
    Array[File] targets_bed 
    File mappings_sorted_bam 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? dedup_metrics = ""
        File? mappings_recaled_bam = ""
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9ZQqbQ0kpZjYxB40qKVVvxg" 
    }
}
task app_sentieon_dnaseq_bam_wes {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    Int? bam_compression_level 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Boolean run_deduplicate 
    Array[File] targets_bed 
    File mappings_sorted_bam 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? dedup_metrics = ""
        File? mappings_recaled_bam = ""
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9ZQvZQ017fQf7BY0pjQzK1v" 
    }
}
task app_sentieon_dnaseq_bam_wgs {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    Int? bam_compression_level 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Boolean run_deduplicate 
    Array[File] targets_bed 
    File mappings_sorted_bam 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? dedup_metrics = ""
        File? mappings_recaled_bam = ""
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9ZQxQ00gQBY5zyY0pXKZJV1" 
    }
}
task app_sentieon_dnaseq_bam_wgs2 {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    Int? bam_compression_level 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Boolean run_deduplicate 
    Array[File] targets_bed 
    File mappings_sorted_bam 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? dedup_metrics = ""
        File? mappings_recaled_bam = ""
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9ZQyK80x6Z8YxB40qKVVx0G" 
    }
}
task app_sentieon_dnaseq_fq_panel {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    String? extra_bwa_options 
    String read_group_platform 
    Int? bam_compression_level 
    Array[File] reads2_fastqgzs 
    File genomeindex_targz 
    File? rg_info_csv 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Array[File]+ reads_fastqgzs 
    Array[File] targets_bed 
    String? sample 
    Boolean? mark_as_secondary 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File mappings_deduped_bai = ""
        File mappings_deduped_bam = ""
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? mappings_recaled_bam = ""
        Array[File]+ metrics = [""]
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9Yvj5Q0gPP484QK3PpK0zg2" 
    }
}
task app_sentieon_dnaseq_fq_wes {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    String? extra_bwa_options 
    String read_group_platform 
    Int? bam_compression_level 
    Array[File] reads2_fastqgzs 
    File genomeindex_targz 
    File? rg_info_csv 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Array[File]+ reads_fastqgzs 
    Array[File] targets_bed 
    String? sample 
    Boolean? mark_as_secondary 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File mappings_deduped_bai = ""
        File mappings_deduped_bam = ""
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? mappings_recaled_bam = ""
        Array[File]+ metrics = [""]
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9V814Q0QPqyY2vF2ZY1jKkv" 
    }
}
task app_sentieon_dnaseq_fq_wgs {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    String? extra_bwa_options 
    String read_group_platform 
    Int? bam_compression_level 
    Array[File] reads2_fastqgzs 
    File genomeindex_targz 
    File? rg_info_csv 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Array[File]+ reads_fastqgzs 
    Array[File] targets_bed 
    String? sample 
    Boolean? mark_as_secondary 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File mappings_deduped_bai = ""
        File mappings_deduped_bam = ""
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? mappings_recaled_bam = ""
        Array[File]+ metrics = [""]
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9Yvp900kXb0YFG13P1GgjFJ" 
    }
}
task app_sentieon_dnaseq_fq_wgs2 {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    String? extra_bwa_options 
    String read_group_platform 
    Int? bam_compression_level 
    Array[File] reads2_fastqgzs 
    File genomeindex_targz 
    File? rg_info_csv 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Array[File]+ reads_fastqgzs 
    Array[File] targets_bed 
    String? sample 
    Boolean? mark_as_secondary 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File mappings_deduped_bai = ""
        File mappings_deduped_bam = ""
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? mappings_recaled_bam = ""
        Array[File]+ metrics = [""]
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9Yvzv005yK5JqF150V5G513" 
    }
}
task app_sentieon_tnseq_bam_wes {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    String? tnsnv_algo_options 
    String tn_algo 
    File genome_fastagz 
    File? cosmic_vcfgz 
    Int? bam_compression_level 
    File? normal_mappings_sorted_bam 
    String? tnscope_algo_options 
    File tumor_mappings_sorted_bam 
    String? tnhaplotyper_algo_options 
    File? panel_of_normal_vcfgz 
    Boolean tnscope_disable_sv_detector 
    Boolean run_deduplicate 
    Array[File] targets_bed 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File? normal_mappings_recaled_bam = ""
        File? tumor_mappings_realigned_bam = ""
        File? variants_tnscope_vcftbi = ""
        File? variants_tnsnv_vcftbi = ""
        File? variants_tnhaplotyper_vcftbi = ""
        File? tumor_mappings_recaled_bam = ""
        File? variants_tnsnv_vcf = ""
        File? normal_dedup_metrics = ""
        File? variants_tnhaplotyper_vcf = ""
        File? normal_recal_table = ""
        File? tumor_recal_table = ""
        File? tumor_mappings_recaled_bai = ""
        File? callstats_txt = ""
        File? variants_tnscope_vcf = ""
        File? normal_mappings_recaled_bai = ""
        File? tn_mappings_corealigned_bai = ""
        File? tumor_mappings_realigned_bai = ""
        File? tumor_dedup_metrics = ""
        File? normal_mappings_realigned_bai = ""
        File? tn_mappings_corealigned_bam = ""
        File? normal_mappings_realigned_bam = ""
    }
    meta {
        type: "native" 
        id: "app-FB135880Yv5fF0ky3VKvGZy4" 
    }
}
task app_sentieon_tnseq_bam_wgs {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    String? tnsnv_algo_options 
    String tn_algo 
    File genome_fastagz 
    File? cosmic_vcfgz 
    Int? bam_compression_level 
    File? normal_mappings_sorted_bam 
    String? tnscope_algo_options 
    File tumor_mappings_sorted_bam 
    String? tnhaplotyper_algo_options 
    File? panel_of_normal_vcfgz 
    Boolean tnscope_disable_sv_detector 
    Boolean run_deduplicate 
    Array[File] targets_bed 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File? normal_mappings_recaled_bam = ""
        File? tumor_mappings_realigned_bam = ""
        File? variants_tnscope_vcftbi = ""
        File? variants_tnsnv_vcftbi = ""
        File? variants_tnhaplotyper_vcftbi = ""
        File? tumor_mappings_recaled_bam = ""
        File? variants_tnsnv_vcf = ""
        File? normal_dedup_metrics = ""
        File? variants_tnhaplotyper_vcf = ""
        File? normal_recal_table = ""
        File? tumor_recal_table = ""
        File? tumor_mappings_recaled_bai = ""
        File? callstats_txt = ""
        File? variants_tnscope_vcf = ""
        File? normal_mappings_recaled_bai = ""
        File? tn_mappings_corealigned_bai = ""
        File? tumor_mappings_realigned_bai = ""
        File? tumor_dedup_metrics = ""
        File? normal_mappings_realigned_bai = ""
        File? tn_mappings_corealigned_bam = ""
        File? normal_mappings_realigned_bam = ""
    }
    meta {
        type: "native" 
        id: "app-FB13678036J0Pf9B0g13ZQvB" 
    }
}
task app_sentieon_tnseq_fq_wes {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    Array[File] normal_reads2_fastqgzs 
    String? tnsnv_algo_options 
    String tn_algo 
    Array[File] tumor_reads2_fastqgzs 
    File genome_fastagz 
    String? extra_bwa_options 
    File? cosmic_vcfgz 
    Array[File] normal_reads_fastqgzs 
    Array[File]+ tumor_reads_fastqgzs 
    String read_group_platform 
    Int? bam_compression_level 
    File genomeindex_targz 
    File? rg_info_csv 
    String? normal_sample 
    String? tnscope_algo_options 
    String? tnhaplotyper_algo_options 
    File? panel_of_normal_vcfgz 
    Boolean tnscope_disable_sv_detector 
    Array[File] targets_bed 
    String? tumor_sample 
    Boolean? mark_as_secondary 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        Array[File] normal_metrics = []
        File? normal_mappings_recaled_bam = ""
        File? tumor_mappings_realigned_bam = ""
        Array[File]+ tumor_metrics = [""]
        File? variants_tnscope_vcftbi = ""
        File? variants_tnsnv_vcftbi = ""
        File? variants_tnhaplotyper_vcftbi = ""
        File? tumor_mappings_recaled_bam = ""
        File? variants_tnsnv_vcf = ""
        File? variants_tnhaplotyper_vcf = ""
        File tumor_mappings_deduped_bai = ""
        File? normal_recal_table = ""
        File? tumor_recal_table = ""
        File? tumor_mappings_recaled_bai = ""
        File? normal_mappings_deduped_bam = ""
        File? callstats_txt = ""
        File? variants_tnscope_vcf = ""
        File? normal_mappings_deduped_bai = ""
        File? normal_mappings_recaled_bai = ""
        File? tn_mappings_corealigned_bai = ""
        File? tumor_mappings_realigned_bai = ""
        File tumor_mappings_deduped_bam = ""
        File? normal_mappings_realigned_bai = ""
        File? tn_mappings_corealigned_bam = ""
        File? normal_mappings_realigned_bam = ""
    }
    meta {
        type: "native" 
        id: "app-FB132F8082F0z4ZkKp7ZpFpq" 
    }
}
task app_sentieon_tnseq_fq_wgs {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    Array[File] normal_reads2_fastqgzs 
    String? tnsnv_algo_options 
    String tn_algo 
    Array[File] tumor_reads2_fastqgzs 
    File genome_fastagz 
    String? extra_bwa_options 
    File? cosmic_vcfgz 
    Array[File] normal_reads_fastqgzs 
    Array[File]+ tumor_reads_fastqgzs 
    String read_group_platform 
    Int? bam_compression_level 
    File genomeindex_targz 
    File? rg_info_csv 
    String? normal_sample 
    String? tnscope_algo_options 
    String? tnhaplotyper_algo_options 
    File? panel_of_normal_vcfgz 
    Boolean tnscope_disable_sv_detector 
    Array[File] targets_bed 
    String? tumor_sample 
    Boolean? mark_as_secondary 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        Array[File] normal_metrics = []
        File? normal_mappings_recaled_bam = ""
        File? tumor_mappings_realigned_bam = ""
        Array[File]+ tumor_metrics = [""]
        File? variants_tnscope_vcftbi = ""
        File? variants_tnsnv_vcftbi = ""
        File? variants_tnhaplotyper_vcftbi = ""
        File? tumor_mappings_recaled_bam = ""
        File? variants_tnsnv_vcf = ""
        File? variants_tnhaplotyper_vcf = ""
        File tumor_mappings_deduped_bai = ""
        File? normal_recal_table = ""
        File? tumor_recal_table = ""
        File? tumor_mappings_recaled_bai = ""
        File? normal_mappings_deduped_bam = ""
        File? callstats_txt = ""
        File? variants_tnscope_vcf = ""
        File? normal_mappings_deduped_bai = ""
        File? normal_mappings_recaled_bai = ""
        File? tn_mappings_corealigned_bai = ""
        File? tumor_mappings_realigned_bai = ""
        File tumor_mappings_deduped_bam = ""
        File? normal_mappings_realigned_bai = ""
        File? tn_mappings_corealigned_bam = ""
        File? normal_mappings_realigned_bam = ""
    }
    meta {
        type: "native" 
        id: "app-FB1337Q0Xp4K02Px85k4jV2Y" 
    }
}
task aws_platform_to_s3_file_transfer {
    Int worker_max 
    String? bandwidth 
    String? opt_dir 
    Boolean conserve_structure 
    Array[File]+ f_ids 
    String target_s3 
    File config_file 
    String? additional_upload_param 
    command {
    }
    output {
        File upload_report = ""
    }
    meta {
        type: "native" 
        id: "app-FF7yvKj9ZBkPfxFG8f0Z6b6K" 
    }
}
task aws_s3_to_platform_files {
    Int worker_max 
    String? bandwidth 
    Array[String]+ f_urls 
    String target_s3 
    String up_dir 
    File config_file 
    Boolean upload_direct_to_proj 
    String? additional_upload_param 
    command {
    }
    output {
        File upload_report = ""
        Array[File]+ transferred_files = [""]
    }
    meta {
        type: "native" 
        id: "app-F75bJF898Xyj0VYQ4Ykxkbzg" 
    }
}
task bam_slicer {
    File ref_fasta 
    Int chunk_size 
    String output_prefix 
    Array[File]+ input_bams 
    Array[File] input_bais 
    command {
    }
    output {
        Array[File]+ bam_slices = [""]
        Array[File]+ refs_split = [""]
        Array[File]+ splits = [""]
    }
    meta {
        type: "native" 
        id: "app-F96b3Fj0yPf8pk350v9f20bq" 
    }
}
task bamtools_merge {
    Array[File]+ sorted_bams 
    String? advanced_options 
    command {
    }
    output {
        File sorted_bam = ""
        File sorted_bai = ""
    }
    meta {
        type: "native" 
        id: "app-FBK5j400Q3yFxXGx9Gfgk7qp" 
    }
}
task bax_h5_to_fasta {
    Array[File]+ input_files 
    command {
    }
    output {
        Array[File]+ output_fastas = [""]
    }
    meta {
        type: "native" 
        id: "app-F2Z00v80Jb351XgQKGZX7g99" 
    }
}
task bowtie2_fasta_indexer {
    File genome_fastagz 
    command {
    }
    output {
        File genomeindex_targz = ""
    }
    meta {
        type: "native" 
        id: "app-FBPgf4Q9yfkPZ3vX7jybPy4k" 
    }
}
task bowtie2_fastq_read_mapper {
    String? preset 
    String read_group_platform_unit 
    Boolean add_read_group 
    String read_group_library 
    File? reads2_fastqgz 
    Boolean? local_alignment 
    String read_group_platform 
    File genomeindex_targz 
    String? advanced_options 
    String read_group_sample 
    Boolean? phred64 
    File reads_fastqgz 
    String read_group_id 
    command {
    }
    output {
        File sorted_bam = ""
        File sorted_bai = ""
        Array[File]+ unaligned_reads = [""]
    }
    meta {
        type: "native" 
        id: "app-FBZkYbQ0p16zZkYy32P812FQ" 
    }
}
task bwa_backtrack_fastq_read_mapper {
    String read_group_platform_unit 
    String? advanced_aln_options 
    Boolean add_read_group 
    String read_group_library 
    File? reads2_fastqgz 
    Boolean? skip_casava_filtered 
    String read_group_platform 
    File genomeindex_targz 
    Boolean? preload_index 
    String? advanced_samse_options 
    String read_group_sample 
    Boolean? phred64 
    File reads_fastqgz 
    String? advanced_sampe_options 
    String read_group_id 
    command {
    }
    output {
        File sorted_bam = ""
        File sorted_bai = ""
    }
    meta {
        type: "native" 
        id: "app-FBKxF900Ky6j1xyY9pJfzpBF" 
    }
}
task bwa_fasta_indexer {
    File genome_fastagz 
    File? genome_alt_index 
    command {
    }
    output {
        File genomeindex_targz = ""
    }
    meta {
        type: "native" 
        id: "app-FF5Q4200Kvf9jvF36B5fFJ5z" 
    }
}
task bwa_mem_fastq_read_mapper {
    String mark_or_remove_duplicate 
    String? extra_bwa_options 
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File genomeindex_targz 
    File? rg_info_csv 
    Array[File]+ reads_fastqgzs 
    String? sample 
    Boolean? mark_as_secondary 
    Boolean? soft_clipping_for_supplementary 
    command {
    }
    output {
        File sorted_bam = ""
        File sorted_bai = ""
        File? duplication_metrics = ""
    }
    meta {
        type: "native" 
        id: "app-FF5k4p80B9vGXvPJPp46VVVB" 
    }
}
task canu {
    String? prefix 
    Boolean error_correct 
    Array[File] pacbio_reads 
    String? adv_options 
    String genome_size 
    Array[File] nanopore_reads 
    command {
    }
    output {
        File unitigs_graph = ""
        File assembly_graph = ""
        File? error_corrected_reads = ""
        File assembly_stats = ""
        File primary_contigs = ""
        File trimmed_reads = ""
        File? alternate_contigs = ""
        File unassembled_reads = ""
        File layout = ""
        File unitigs = ""
    }
    meta {
        type: "native" 
        id: "app-F4zGGxj0jzBJvkPp4GQ2kZK1" 
    }
}
task cloud_workstation {
    String max_session_length 
    Array[File] fids 
    File? snapshot 
    command {
    }
    meta {
        type: "native" 
        id: "app-F8bJJG89Y3G535GQ99v0zq2b" 
    }
}
task cnvnator {
    File input_bam 
    File? input_bai 
    File ref_fasta 
    Boolean filter_short_contigs 
    command {
    }
    output {
        File cnvnator_output = ""
        File cnvnator_vcf = ""
        Array[File]+ cnvnator_svp = [""]
    }
    meta {
        type: "native" 
        id: "app-F3gpXq80Y1v74jPFPjzxx79K" 
    }
}
task cuffdiff {
    Boolean? multi_read_correct 
    String? extra_options 
    Array[File]+ sorted_bams 
    Boolean? treat_as_time_series 
    String? library_type 
    File tuxedo_resource_targz 
    Boolean? frag_bias_correct 
    String? dispersion_method 
    String? library_norm_method 
    Float? fdr 
    command {
    }
    output {
        Array[File]+ results = [""]
        File vennt_html = ""
    }
    meta {
        type: "native" 
        id: "app-F4jFZb09xv78815FPGfG4BjX" 
    }
}
task cushaw2_fasta_indexer {
    File genome_fastagz 
    command {
    }
    output {
        File genomeindex_targz = ""
    }
    meta {
        type: "native" 
        id: "app-F4jFgZj9YFP2B396Fj5FPY4B" 
    }
}
task cushaw2_fastq_read_mapper {
    String read_group_platform_unit 
    Boolean add_read_group 
    String read_group_library 
    File? reads2_fastqgz 
    String read_group_platform 
    File genomeindex_targz 
    String? advanced_options 
    String read_group_sample 
    File reads_fastqgz 
    String read_group_id 
    command {
    }
    output {
        File sorted_bam = ""
    }
    meta {
        type: "native" 
        id: "app-F4jFjX89JPg9vy69G1vF4gP9" 
    }
}
task cyverse_importer_bth {
    String cyverse_folder 
    command {
    }
    output {
        Array[File]+ output_files = [""]
    }
    meta {
        type: "native" 
        id: "app-FFYF5z00X6vP2z0zKxXvGP1j" 
    }
}
task daviewer {
    File dazzler_db 
    Array[File]+ las_files 
    String session_length 
    command {
    }
    meta {
        type: "native" 
        id: "app-ByfKg6807z87YV2zf886BQyY" 
    }
}
task dfilter {
    String? extra_options 
    Boolean? directional 
    Boolean? nonzero 
    Boolean? refine 
    String? predefined_options 
    File? control_bam 
    Int? kernel_size 
    Int? bin_size 
    File sample_bam 
    command {
    }
    output {
        File peaks_txt = ""
    }
    meta {
        type: "native" 
        id: "app-BYzyxJ00bQq0B3ZZg9gvpgB1" 
    }
}
task dragen_build_fasta_hash_table {
    File input_fasta 
    File? ht_alt_liftover 
    Boolean include_anchored_rna 
    command {
    }
    output {
        File hash_table = ""
    }
    meta {
        type: "native" 
        id: "app-FFJKf2j071qzXxP1BjjPJ80j" 
    }
}
task dragen_gp_germline_bam {
    File input_bam 
    File hash_table 
    File? targets_bed 
    Boolean hair_pin_filter 
    command {
    }
    output {
        Array[File]+ stats = [""]
        File output_hard_filtered_vcf = ""
        File output_vcf = ""
        File output_tbi = ""
        File output_hard_filtered_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBf5G4Q06Gg2QJ3YFFvkGJ74" 
    }
}
task dragen_gp_germline_fq {
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File? rg_info_csv 
    Boolean generate_md_tag 
    String mark_or_remove_duplicates 
    Array[File]+ reads_fastqgzs 
    File? targets_bed 
    String? sample 
    File hash_table 
    Boolean hair_pin_filter 
    command {
    }
    output {
        Array[File]+ stats = [""]
        File output_hard_filtered_vcf = ""
        File output_bai = ""
        File output_bam = ""
        File output_vcf = ""
        File output_tbi = ""
        File output_hard_filtered_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBf5GZj0p38kPkQ518Q5BfXf" 
    }
}
task dragen_mapping {
    String read_group_platform 
    Array[File] reads2_fastqgzs 
    File? rg_info_csv 
    Boolean generate_md_tag 
    String mark_or_remove_duplicates 
    Array[File]+ reads_fastqgzs 
    String? sample 
    File hash_table 
    command {
    }
    output {
        File output_bam = ""
        File output_bai = ""
        Array[File]+ stats = [""]
    }
    meta {
        type: "native" 
        id: "app-FBf5J5805qXZjGVg0kGf2xjg" 
    }
}
task elprep {
    File bam 
    command {
    }
    output {
        File bam_out = ""
    }
    meta {
        type: "native" 
        id: "app-Bg15bz808G6JZ7VgX95gv8Fk" 
    }
}
task falcon_to_fastg {
    File preads4falcon 
    File sg_edges_list 
    File utg_data 
    File p_ctg_fasta 
    File ctg_paths 
    File p_ctg_tiling_path 
    command {
    }
    output {
        File reads_fastg = ""
        File contigs_fastg = ""
        File read_names = ""
    }
    meta {
        type: "native" 
        id: "app-ByfKgJQ0FfY4ggpx3GG4Kp2B" 
    }
}
task fastqc {
    String format 
    File? contaminants_txt 
    String? extra_options 
    Int kmer_size 
    File? adapters_txt 
    Boolean nogroup 
    File? limits_txt 
    File reads 
    command {
    }
    output {
        File report_html = ""
        File stats_txt = ""
    }
    meta {
        type: "native" 
        id: "app-F4jG5G8917BVy790G2QkB946" 
    }
}
task fc_hpc_daligner {
    Int? length_cutoff 
    Boolean? falcon_sense_greedy 
    Int? min_len_aln 
    Int? min_cov 
    Int num_threads_per_daligner_job 
    String? daligner_arguments 
    String? generate_consensus_fastas 
    Int? max_n_read 
    Float? min_idt 
    Boolean create_plan_script_only 
    String? dazcon_options 
    String? daligner_instance_type 
    String rerun_job_id 
    Int? min_cov_aln 
    Int? sync_time 
    Int? trim_size 
    Int? edge_tolerance 
    File dazzler_db 
    String file_prefix 
    Boolean? trim 
    Boolean? use_mask_tracks 
    String? lasort_instance_type 
    Boolean? skip_contained 
    Boolean rerun_consensus 
    command {
    }
    output {
        Array[File] output_files = []
        Array[File] consensus_fastas = []
        File? daligner_plan_script = ""
    }
    meta {
        type: "native" 
        id: "app-FB7fvV09pGxz71F8KVYZ1fJq" 
    }
}
task file_concatenator {
    Array[File]+ files 
    String? output_filename 
    command {
    }
    output {
        File file = ""
    }
    meta {
        type: "native" 
        id: "app-FBG5K1j9bb67zPzQPy41GGkZ" 
    }
}
task flexbar_fastq_read_trimmer {
    Int trim_left 
    Int trim_right 
    Int max_uncalled 
    Int trim_quality_threshold 
    File? reads2_fastqgz 
    String? advanced_options 
    Int min_length 
    Boolean phred64 
    File reads_fastqgz 
    command {
    }
    output {
        File trimmed_reads_fastqgz = ""
        File? trimmed_reads2_fastqgz = ""
    }
    meta {
        type: "native" 
        id: "app-F4jG7VQ974bXVbJpFjbPzbFG" 
    }
}
task freebayes {
    Boolean normalize_variants 
    File genome_fastagz 
    String? output_prefix 
    Array[File]+ sorted_bams 
    String? advanced_options 
    Boolean genotype_qualities 
    File? targets_bed 
    Boolean bam_add_rg 
    Boolean parallelized 
    Boolean standard_filters 
    command {
    }
    output {
        File variants_vcfgz = ""
        File variants_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-FBPgZF89xP0kgFzQKx68yBZ2" 
    }
}
task gatk3_human_exome_pipeline {
    String? extra_ir_options 
    String? extra_rtc_options 
    String? extra_br_options 
    String? extra_hc_options 
    Boolean? skip_markduplicates 
    File sorted_bam 
    String? extra_gg_options 
    String output_format 
    String? extra_pr_options 
    Int padding 
    String? vendor_exome 
    String? extra_md_options 
    File gatk_jar_file 
    command {
    }
    output {
        File? vcf_tbi = ""
        File? gvcf = ""
        File? gvcf_tbi = ""
        File bai = ""
        File bam = ""
        File? vcf = ""
    }
    meta {
        type: "native" 
        id: "app-F4pjPzj9fgf5zj2jFj97Fz97" 
    }
}
task gatk4_genotypegvcfs_single_sample_parallel {
    String? extra_options 
    File genome_fastagz 
    File? targets 
    String? prefix 
    File? dbsnp_vcfgz 
    File variant_gvcf 
    command {
    }
    output {
        File variants_vcfgz = ""
        File variants_vcfgztbi = ""
    }
    meta {
        type: "native" 
        id: "app-FFVGy680pxV6GZg91xFFjBz5" 
    }
}
task gatk4_haplotypecaller_parallel {
    Boolean ignore_decoy 
    String? extra_options 
    File genome_fastagz 
    File? targets 
    File? dbsnp_vcfgz 
    File mappings_sorted_bam 
    command {
    }
    output {
        File variants_gvcf = ""
        File variants_gvcftbi = ""
    }
    meta {
        type: "native" 
        id: "app-FFVGxX80bxvYjV551yBQ9y4y" 
    }
}
task gatk_lite_unified_genotyper {
    File genome_fastagz 
    Array[File]+ sorted_bams 
    File? dbsnp_vcfgz 
    String? advanced_options 
    String glm 
    command {
    }
    output {
        File variants_vcfgz = ""
    }
    meta {
        type: "native" 
        id: "app-F4pjJjj9zzKpvXxfPFygZX6P" 
    }
}
task hisat2_index {
    File? snp_file 
    File? transcr_annotation_gtf 
    String? snp_vcf_type 
    File? variants_vcf 
    File? exon_file 
    String? cmd_line_args 
    String? index_prefix 
    File ref_input_fasta 
    Int? num_cores 
    File? ss_file 
    File? haplotype_file 
    command {
    }
    output {
        File genome_index_targz = ""
        Array[File] hisat_tab_files = []
    }
    meta {
        type: "native" 
        id: "app-F4j8BXj90X7ZFVvpJPQQGBJF" 
    }
}
task hisat2_mapper {
    File genome_index 
    String? out_prefix 
    String? cmd_line_args 
    Array[File] reads_rev_fa 
    Array[File]+ reads_fwd_fa 
    Int? num_cores 
    command {
    }
    output {
        File sorted_mappings_bam = ""
        File index_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F4j8Fyj94BXKpkffFjkxx647" 
    }
}
task illumina_barcode_distribution {
    File fastq 
    Int sample_size 
    command {
    }
    output {
        File dist = ""
    }
    meta {
        type: "native" 
        id: "app-FF79XY80YXx80xK10xGZJ8f4" 
    }
}
task illumina_extract_barcodes {
    File r1 
    File r2 
    String outfile_prefix 
    Array[String]+ barcodes 
    command {
    }
    output {
        Array[File]+ outfiles = [""]
    }
    meta {
        type: "native" 
        id: "app-FF79XgQ0jJjb5Yfb0x1bk8Q0" 
    }
}
task ingenuity_variant_transfer {
    String email 
    String? description 
    Array[File]+ vcfs 
    Array[File] bam_files 
    Array[File] bai_files 
    String reference_genome_name 
    File? description_file 
    String desc_source 
    command {
    }
    output {
        String results_url = ""
    }
    meta {
        type: "native" 
        id: "app-F7Pq7889xYYkQjFB1Pj3Gx67" 
    }
}
task jellyfish_and_genomescope {
    String? output_prefix 
    Int? upper_bound 
    Array[File]+ sequences_fastx 
    Int mer_length 
    Boolean output_kmer_counts 
    Int? lower_bound 
    Int hash_size 
    command {
    }
    output {
        String genomescope_read_error_rate = ""
        File? kmer_counts = ""
        Array[File]+ genomescope_files = [""]
        File histogram = ""
        String genomescope_unique_length_estimate = ""
        String genomescope_haploid_length_estimate = ""
        Array[File]+ genomescope_figures = [""]
        String genomescope_heterozygosity_estimate = ""
        String genomescope_model_fit = ""
        String genomescope_repeat_length_estimate = ""
    }
    meta {
        type: "native" 
        id: "app-FBP3ZK00y39Kqp13PyQbYG5J" 
    }
}
task lofreq {
    File sorted_bam 
    File genome_fastagz 
    String? advanced_options 
    command {
    }
    output {
        File variants_vcfgz = ""
        File variants_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-F4pjg40950g1y790G2QkBvkK" 
    }
}
task lofreq_somatic {
    File genome_fastagz 
    File tumor_bam 
    File? dbsnp 
    String? advanced_options 
    File? target_bed 
    File normal_bam 
    command {
    }
    output {
        File snvs_vcfgz = ""
        File snvs_tbi = ""
        File? indels_vcfgz = ""
        File? indels_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-F4pjj009JJ7vx2gb917Q1bZY" 
    }
}
task mask_genome {
    File fasta_input 
    File bed_input 
    Int? extend_len 
    command {
    }
    output {
        File fasta_output = ""
    }
    meta {
        type: "native" 
        id: "app-B6xqZByqV8x6B53gZ5G02j7v" 
    }
}
task multiqc {
    File? user_config 
    Array[File]+ input_logs 
    String report_prefix 
    File? logo_png 
    String? additional_commandline_args 
    command {
    }
    output {
        File html_report = ""
        Array[File]+ data_files = [""]
    }
    meta {
        type: "native" 
        id: "app-FFpJqb095gj00xJ2P4fj0ZZb" 
    }
}
task org_admin_cloud_workstation {
    Int max_session_length 
    command {
    }
    meta {
        type: "native" 
        id: "app-BqQG2xj0ZGqz9Y5FxZ85GvzJ" 
    }
}
task parliament {
    File ref_fasta 
    Boolean run_cnvnator 
    String? prefix 
    Boolean filter_short_contigs 
    Boolean run_manta 
    File illumina_bam 
    Boolean run_breakseq 
    Boolean run_lumpy 
    Int regions_per_job 
    Boolean run_parliament 
    File? illumina_bai 
    Array[File] svp_files 
    File? pacbio_bam 
    Boolean run_breakdancer 
    Boolean run_delly 
    command {
    }
    output {
        File? parliament_pacbio_vcf = ""
        Array[File] sv_caller_results = []
        Array[File] svps = []
        File? calls = ""
        File? assembly_index_bai = ""
        File? assembly_bam = ""
        File? parliament_assembly_vcf = ""
    }
    meta {
        type: "native" 
        id: "app-F14xB5j0g31B6ZyvJ8yKQ4JF" 
    }
}
task parliament2 {
    File ref_fasta 
    Boolean run_genotype_candidates 
    Boolean run_cnvnator 
    String? prefix 
    Boolean filter_short_contigs 
    Boolean run_delly_deletion 
    Boolean run_svviz 
    Boolean run_manta 
    File illumina_bam 
    Boolean run_breakseq 
    Boolean run_lumpy 
    Boolean run_delly_duplication 
    Boolean svviz_only_validated_candidates 
    Boolean run_delly_insertion 
    File? illumina_bai 
    Boolean run_delly_inversion 
    Boolean run_breakdancer 
    command {
    }
    output {
        Array[File]+ sv_caller_results = [""]
        Array[File] svtyped_vcfs = []
        File? combined_genotypes = ""
        File? svviz_outputs = ""
    }
    meta {
        type: "native" 
        id: "app-FF750xj0fvYk057Z0qyx2qGp" 
    }
}
task pb_honey_sv_caller {
    File ref_genome 
    String priority 
    String? prefix 
    String? spots_ins_arguments 
    String? spots_del_arguments 
    File? ref_genome_ngm 
    Array[File]+ reads 
    command {
    }
    output {
        File honey_spots_vcf = ""
        File? ngm_bam_file = ""
        File? ngm_bai_file = ""
        File honey_spots_ins_bed = ""
        File honey_spots_del_bed = ""
    }
    meta {
        type: "native" 
        id: "app-F1Gvz6Q09FfQYbb97X4zk33g" 
    }
}
task picard_collect_multiple_metrics {
    File sorted_bam 
    File fasta_index 
    String? extra_options 
    command {
    }
    output {
        Array[File]+ stats = [""]
    }
    meta {
        type: "native" 
        id: "app-FByff6Q9pF6kB4Ky05682vq6" 
    }
}
task picard_samtools_fasta_indexer {
    File fastagz 
    command {
    }
    output {
        File fastaindex_targz = ""
    }
    meta {
        type: "native" 
        id: "app-FByg33Q9BxXV22ffG0B6p808" 
    }
}
task qualimap2_anlys {
    File? sample_tsv 
    String? report_prefix 
    File? feature_file 
    String? additional_args 
    Array[File]+ bam_files 
    String output_type 
    String anlys_mode 
    command {
    }
    output {
        File qualimap2_report = ""
        Array[File] qualimap2_raw_reports = []
    }
    meta {
        type: "native" 
        id: "app-F9FBZgj9bgKVx8YxF8zjq804" 
    }
}
task ray {
    Array[File]+ leftFiles 
    Array[File]+ rightFiles 
    Array[File] singleFiles 
    Int wordSize 
    command {
    }
    output {
        File contigs = ""
        File scaffolds = ""
        File coverageDistribution = ""
        File rayCommand = ""
    }
    meta {
        type: "native" 
        id: "app-B6gvJkV2kfb7Byjxk55Q010K" 
    }
}
task samtools_index {
    File sorted_bam 
    command {
    }
    output {
        File index_bai = ""
    }
    meta {
        type: "native" 
        id: "app-FF6ZPG89150XV19347j6fJ2Z" 
    }
}
task samtools_sort {
    File mappings_bam 
    Boolean? by_name 
    command {
    }
    output {
        File sorted_bam = ""
    }
    meta {
        type: "native" 
        id: "app-FF36Kjj95zQ9By8G9f33495q" 
    }
}
task samtools_variant_caller {
    Array[File]+ sorted_bams 
    File genome_fastagz 
    String? advanced_st_options 
    String? advanced_bt_options 
    command {
    }
    output {
        File variants_vcfgz = ""
    }
    meta {
        type: "native" 
        id: "app-F4ppjbj9vYvVfF9gG2bvbvZ5" 
    }
}
task saphetor_exporter {
    Array[File] input_fastqgz 
    File? input_vcfgz 
    File token 
    command {
    }
    output {
        String? result_message_fastq = ""
        String? result_message_vcf = ""
    }
    meta {
        type: "native" 
        id: "app-F6VQKbQ9ZXFG5Y1514BVQ88x" 
    }
}
task sentieon_dnaseq_bam {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    Int? bam_compression_level 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Boolean run_deduplicate 
    Array[File] targets_bed 
    File mappings_sorted_bam 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? dedup_metrics = ""
        File? mappings_recaled_bam = ""
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9ZQpjj0bkK509pq0v0b4J65" 
    }
}
task sentieon_dnaseq_fq {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    File genome_fastagz 
    String? extra_bwa_options 
    String read_group_platform 
    Int? bam_compression_level 
    Array[File] reads2_fastqgzs 
    File genomeindex_targz 
    File? rg_info_csv 
    String? haplotyper_algo_options 
    String? gvcftyper_algo_options 
    Array[File]+ reads_fastqgzs 
    Array[File] targets_bed 
    String? sample 
    Boolean? mark_as_secondary 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File mappings_deduped_bai = ""
        File mappings_deduped_bam = ""
        File variants_gvcf = ""
        File? recal_table = ""
        File? mappings_realigned_bai = ""
        File? mappings_realigned_bam = ""
        File variants_vcftbi = ""
        File variants_vcf = ""
        File? mappings_recaled_bam = ""
        Array[File]+ metrics = [""]
        File variants_gvcftbi = ""
        File? mappings_recaled_bai = ""
    }
    meta {
        type: "native" 
        id: "app-F9V80680fjXVjyq42ZpV0x6Z" 
    }
}
task sentieon_tnseq_bam {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    String? tnsnv_algo_options 
    String tn_algo 
    File genome_fastagz 
    File? cosmic_vcfgz 
    Int? bam_compression_level 
    File? normal_mappings_sorted_bam 
    String? tnscope_algo_options 
    File tumor_mappings_sorted_bam 
    String? tnhaplotyper_algo_options 
    File? panel_of_normal_vcfgz 
    Boolean tnscope_disable_sv_detector 
    Boolean run_deduplicate 
    Array[File] targets_bed 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        File? normal_mappings_recaled_bam = ""
        File? tumor_mappings_realigned_bam = ""
        File? variants_tnscope_vcftbi = ""
        File? variants_tnsnv_vcftbi = ""
        File? variants_tnhaplotyper_vcftbi = ""
        File? tumor_mappings_recaled_bam = ""
        File? variants_tnsnv_vcf = ""
        File? normal_dedup_metrics = ""
        File? variants_tnhaplotyper_vcf = ""
        File? normal_recal_table = ""
        File? tumor_recal_table = ""
        File? tumor_mappings_recaled_bai = ""
        File? callstats_txt = ""
        File? variants_tnscope_vcf = ""
        File? normal_mappings_recaled_bai = ""
        File? tn_mappings_corealigned_bai = ""
        File? tumor_mappings_realigned_bai = ""
        File? tumor_dedup_metrics = ""
        File? normal_mappings_realigned_bai = ""
        File? tn_mappings_corealigned_bam = ""
        File? normal_mappings_realigned_bam = ""
    }
    meta {
        type: "native" 
        id: "app-FB134JQ0Xvk860g8KpFP1bKQ" 
    }
}
task sentieon_tnseq_fq {
    Boolean ignore_decoy 
    String mark_or_remove_duplicate 
    Array[File] normal_reads2_fastqgzs 
    String? tnsnv_algo_options 
    String tn_algo 
    Array[File] tumor_reads2_fastqgzs 
    File genome_fastagz 
    String? extra_bwa_options 
    File? cosmic_vcfgz 
    Array[File] normal_reads_fastqgzs 
    Array[File]+ tumor_reads_fastqgzs 
    String read_group_platform 
    Int? bam_compression_level 
    File genomeindex_targz 
    File? rg_info_csv 
    String? normal_sample 
    String? tnscope_algo_options 
    String? tnhaplotyper_algo_options 
    File? panel_of_normal_vcfgz 
    Boolean tnscope_disable_sv_detector 
    Array[File] targets_bed 
    String? tumor_sample 
    Boolean? mark_as_secondary 
    File? gatk_resource_bundle 
    String output_refined_bam_to_output 
    command {
    }
    output {
        Array[File] normal_metrics = []
        File? normal_mappings_recaled_bam = ""
        File? tumor_mappings_realigned_bam = ""
        Array[File]+ tumor_metrics = [""]
        File? variants_tnscope_vcftbi = ""
        File? variants_tnsnv_vcftbi = ""
        File? variants_tnhaplotyper_vcftbi = ""
        File? tumor_mappings_recaled_bam = ""
        File? variants_tnsnv_vcf = ""
        File? variants_tnhaplotyper_vcf = ""
        File tumor_mappings_deduped_bai = ""
        File? normal_recal_table = ""
        File? tumor_recal_table = ""
        File? tumor_mappings_recaled_bai = ""
        File? normal_mappings_deduped_bam = ""
        File? callstats_txt = ""
        File? variants_tnscope_vcf = ""
        File? normal_mappings_deduped_bai = ""
        File? normal_mappings_recaled_bai = ""
        File? tn_mappings_corealigned_bai = ""
        File? tumor_mappings_realigned_bai = ""
        File tumor_mappings_deduped_bam = ""
        File? normal_mappings_realigned_bai = ""
        File? tn_mappings_corealigned_bam = ""
        File? normal_mappings_realigned_bam = ""
    }
    meta {
        type: "native" 
        id: "app-FB131G002F5bF4xXJZZ9G1yy" 
    }
}
task sjcp_cache_app {
    command {
    }
    meta {
        type: "native" 
        id: "app-F4gV3qj99X2kYkJbKvX3VgKK" 
    }
}
task sra_fastq_importer {
    Boolean split_files 
    File? ngc_key 
    String? advanced 
    Boolean validate 
    Boolean skip_technical 
    String? prefetch_cmd 
    String output_type 
    String accession 
    Boolean gzip 
    Boolean dumpbase 
    Boolean read_ids 
    command {
    }
    output {
        Array[File]+ reads_fastq = [""]
        Array[File] reads2_fastq = []
    }
    meta {
        type: "native" 
        id: "app-FBjgyfQ9bq9YgQx134qYPFyg" 
    }
}
task star_generate_genome_index {
    String? output_prefix 
    File? transcr_annotation_gtf 
    Int? length_overhang 
    Int? sa_sparsity 
    String? cmd_line_args 
    Int? genome_chr_bin_nbits 
    Int? length_sa_index 
    File ref_input_fasta 
    File? splice_junctions_tsv 
    Int? genome_suffix_length_max 
    command {
    }
    output {
        File genome_index_targz = ""
    }
    meta {
        type: "native" 
        id: "app-F8j37QQ9PV9X3YQG12zYYV60" 
    }
}
task star_mapping {
    String output_genome_opt 
    Array[File] splice_junction_tabfiles 
    String? output_prefix 
    File genome_index 
    Boolean? map_to_transcriptome 
    File? transcr_annotation_gtf 
    Boolean? two_pass_basic 
    Int? first_pass_max_reads 
    String? cmd_line_args 
    Array[File] reads_rev_fa 
    Array[File]+ reads_fwd_fa 
    command {
    }
    output {
        File splice_junctions = ""
        File? transcriptome_bam = ""
        File genome_bam = ""
        File? regen_genome_indx = ""
        File map_stat_log = ""
        Array[File] other_outputs = []
    }
    meta {
        type: "native" 
        id: "app-F8j322Q97yyF2G9k5FqYgQK5" 
    }
}
task strelka2_germline {
    File? sorted_bam_bai 
    Boolean? exome 
    File reference_fasta 
    File sorted_bam 
    File? targets_bed 
    File reference_fasta_index 
    command {
    }
    output {
        File genome_vcf = ""
        File snv_vcf = ""
        File stats_txt = ""
    }
    meta {
        type: "native" 
        id: "app-F9py8xj9jbKZ7gJK2vBPBF6J" 
    }
}
task strelka2_somatic {
    Boolean? exome 
    File tumor_bam 
    File reference_fasta 
    File? tumor_bam_bai 
    File? targets_bed 
    File normal_bam 
    File reference_fasta_index 
    File? normal_bam_bai 
    command {
    }
    output {
        File indels_vcf = ""
        File snv_vcf = ""
        File stats_txt = ""
    }
    meta {
        type: "native" 
        id: "app-F9py9Zj9K2vYg7v73by414gp" 
    }
}
task swiss_army_knife {
    Array[File] in 
    String cmd 
    String? image 
    command {
    }
    output {
        Array[File] out = []
    }
    meta {
        type: "native" 
        id: "app-F4qGvjj9fGVJj5zvG28Y0k80" 
    }
}
task tcoffee {
    File input_fa 
    command {
    }
    output {
        File out_aln = ""
    }
    meta {
        type: "native" 
        id: "app-B6xVZY6PPPYJpGzxq4zQ0xk5" 
    }
}
task tcrb_access_granter {
    String agree 
    command {
    }
    meta {
        type: "native" 
        id: "app-BZVJGB805pZpzpVj0j11FZ6K" 
    }
}
task testing_app_yhwang {
    Int int 
    command {
    }
    output {
        Int int_out = 0
    }
    meta {
        type: "native" 
        id: "app-F5BXZvj0Q5zJ7z259Vj4Vxxq" 
    }
}
task testing_app_yhwang_1 {
    Int int 
    command {
    }
    output {
        Int int_out = 0
    }
    meta {
        type: "native" 
        id: "app-F308vPQ0kff0kZ716ZjV5P7g" 
    }
}
task tgex_exporter {
    String? subject_name 
    String? sample_type 
    String? sample_sequence_machine_id 
    String sample_serial_number 
    String? subject_gender 
    String? sample_notes 
    String? subject_dob 
    String? sample_sequence_date 
    String customer_account_key 
    String? sample_taken_date 
    String? sample_target 
    String? sample_source 
    String? sample_enrichment_kit_id 
    File vcf_file 
    String subject_id 
    command {
    }
    output {
        String url_link = ""
    }
    meta {
        type: "native" 
        id: "app-F4qGY809ByK9pxbJPGBg2Z8k" 
    }
}
task tmap_bam_read_mapper {
    File reads_bam 
    File genomeindex_targz 
    Boolean? mark_as_bidirectional 
    String? advanced_options 
    command {
    }
    output {
        File sorted_bam = ""
    }
    meta {
        type: "native" 
        id: "app-F4qGgjj99Xxxj5zvG28Y0k74" 
    }
}
task tmap_fasta_indexer {
    File genome_fastagz 
    command {
    }
    output {
        File genomeindex_targz = ""
    }
    meta {
        type: "native" 
        id: "app-F4qGp009Q51ZFVvpJPQQJ489" 
    }
}
task tophat_known_genes {
    String? preset 
    Int? mate_inner_dist 
    String? extra_options 
    Array[File] reads2_fastqgz 
    Boolean? output_unmapped 
    String? library_type 
    File tuxedo_resource_targz 
    Boolean? no_novel_juncs 
    Boolean? transcriptome_only 
    String? sample_name 
    Boolean? phred64 
    Int? replicate_index 
    Array[File]+ reads_fastqgz 
    command {
    }
    output {
        File sorted_bam = ""
        File? unmapped_reads = ""
        File summary_txt = ""
    }
    meta {
        type: "native" 
        id: "app-F4qGz2j9bFx2VbJpFjb00XbB" 
    }
}
task torrentsuite_variant_caller {
    File genome_fastagz 
    File sorted_bam 
    String? custom_ia_options 
    String? custom_tvc_options 
    File? hotspot_bed 
    File targets_bed 
    Boolean trim_reads 
    String settings 
    String? custom_hotspot_options 
    command {
    }
    output {
        File variants_vcfgz = ""
        File variants_tbi = ""
        File variants_tsv = ""
        File alleles_tsv = ""
    }
    meta {
        type: "native" 
        id: "app-F412B089zBQjpxkk42KvYYx5" 
    }
}
task tuxedo_resource_builder {
    File genomeindex_targz 
    File genes_gtfgz 
    command {
    }
    output {
        File tuxedo_resource_targz = ""
    }
    meta {
        type: "native" 
        id: "app-F4qJ5jj952b1y790G2QkF20Z" 
    }
}
task velvet {
    Int? coverage_mask 
    String? long_cov_cutoff 
    Int? max_gap_count 
    Boolean? read_trkg 
    File? shortPaired2 
    Boolean? amos_file 
    File? shortPaired 
    File? short2 
    File? longPaired 
    Int? ins_length2 
    Boolean? very_clean 
    File? short 
    Boolean mergeShortPaired 
    Boolean? exportFiltered 
    String? max_divergence 
    Boolean? clean 
    Boolean mergeShortPaired2 
    Boolean? scaffolding 
    Int? hash_length 
    String? cov_cutoff 
    String? exp_cov 
    Boolean mergeLongPaired2 
    Boolean? conserveLong 
    File? long 
    Int? min_pair_count 
    Float? paired_exp_fraction 
    Boolean? alignments 
    String? max_coverage 
    Int? long_mult_cutoff 
    Boolean? shortMatePaired 
    Boolean? unused_reads 
    Int? ins_length2_sd 
    Int? ins_length_long 
    Int? ins_length 
    Int? max_branch_length 
    Int? min_contig_lgth 
    command {
    }
    output {
        File assembly = ""
    }
    meta {
        type: "native" 
        id: "app-BJ7F6V00x7JfP3BK2v800185" 
    }
}
task vendor_human_exome_gatk_lite_pipeline {
    String? advanced_pr_options 
    Boolean novel_indel_realignment 
    String? advanced_ir_options 
    String? advanced_br_options 
    String? advanced_ug_options 
    File sorted_bam 
    String? advanced_md_options 
    String? advanced_rtc_options 
    String glm 
    String? vendor_exome 
    command {
    }
    output {
        File variants_vcfgz = ""
        File variants_tbi = ""
    }
    meta {
        type: "native" 
        id: "app-F4qJ8BQ9fb1zgf4XGbPvkf6Y" 
    }
}
task vendor_human_exome_selection_metrics {
    File sorted_bam 
    String vendor_exome 
    String validation_stringency 
    String? advanced_options 
    command {
    }
    output {
        File hsmetrics_tsv = ""
        File pertarget_coverage_tsv = ""
    }
    meta {
        type: "native" 
        id: "app-F4qJ970999x90P6v90pyg6P8" 
    }
}